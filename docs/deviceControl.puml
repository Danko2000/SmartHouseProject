@startuml
!include ../c4/C4_Component.puml

skinparam shadowing false
skinparam defaultTextAlignment center
skinparam wrapWidth 600

' === Контейнер ===
Container(device_control, "Управление устройствами", "Python + FastAPI", "Включить/выключить свет, отопление, ворота, камеры")

' === Компоненты ===
Component(api_commands, "API команд", "REST Endpoints", "POST /command, GET /devices")
Component(command_service, "Сервис команд", "Business Logic", "Проверяет доступ, формирует команду")
Component(status_tracker, "Отслеживание статуса", "Status Tracker", "Обновляет статус после команды")
Component(protocol_sender, "Отправка по протоколу", "Protocol Sender", "MQTT, HTTP, RTSP")
Component(device_registry, "Реестр устройств", "Device Registry", "Список устройств: ID, тип, статус, протокол")

' === Внешние системы ===
System_Ext(physical_devices, "Физические устройства", "Свет, отопление, ворота, камеры")
Container(api_gateway, "API Gateway", "Python + FastAPI", "Единая точка входа")

' === Связи ===
Rel(device_control, api_commands, "Принимает команду\n[POST /command]")
Rel(api_commands, command_service, "Передаёт на обработку\n[синхронно]")
Rel(command_service, protocol_sender, "Отправляет команду\n[включить/выключить]")
Rel(command_service, device_registry, "Проверяет устройство\n[по ID]")
Rel(protocol_sender, physical_devices, "Выполняет команду\n[MQTT / HTTP / RTSP]")
Rel(device_registry, api_gateway, "Отдаёт список устройств\n[GET /devices → REST API]")
Rel(status_tracker, device_registry, "Обновляет статус\n[после выполнения]")

' === Подпись ===
Footer "C4 Level 3: Управление устройствами"
@enduml