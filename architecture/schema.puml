@startuml
!include C4.puml
'!include Container.puml
'!include Component.puml

skinparam shadowing false
skinparam defaultTextAlignment center
skinparam wrapWidth 600

' === Контейнер ===
'Container(telemetry, "Телеметрия", "Python", "Сбор данных с датчиков")

' === Компонент: Опрос датчиков ===
'Component(sensor_poller, "Опрос датчиков", "Polling Service", "HTTP/MQTT опрос устройств")

' === Классы внутри компонента ===
class SensorPoller {
  +poll_all() : List[SensorData]
  +poll_sensor(id: str) : Optional[SensorData]
  -registry: DeviceRegistry
  -http_client: AsyncHTTPClient
  -mqtt_client: MQTTClient
}

class DeviceRegistry {
  +get_all_active() : List[Device]
  +get_by_id(id: str) : Optional[Device]
  -cache: TTLCache
}

class AsyncHTTPClient {
  +get_json(url: str, timeout: float) -> dict
}

class MQTTClient {
  +publish(topic: str, payload: str) -> bool
  +is_connected() -> bool
}

class SensorData {
  +sensor_id: str
  +type: str
  +value: float
  +timestamp: datetime
  +unit: str
}

' === Внешние зависимости ===
'System_Ext(devices, "Устройства", "Датчики температуры, движения", "HTTP, MQTT")

' === Связи ===
'Rel(sensor_poller, SensorPoller, "Реализован как", "класс")
SensorPoller --> DeviceRegistry : получает список устройств
SensorPoller --> AsyncHTTPClient : GET /data
SensorPoller --> MQTTClient : для устройств по MQTT
SensorPoller --> SensorData : создаёт данные
SensorData --> devices : получает данные от

' === Подпись ===
'Footer "C4 Level 4: Компонент 'Опрос датчиков1'"
@enduml